
task buildJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Venice Common',
        'Implementation-Version': version
  }
  baseName = project.name
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Venice Common',
        'Implementation-Version': version
  }
}

dependencies {

  // Let's try to keep it clean! (i.e.: alphabetical)

  compile (libraries.avro) {
    exclude group: 'org.jboss.netty' // older version of netty3 causes transitive conflicts with the router
    exclude group: 'org.mortbay.jetty' // jetty 6 conflicts with spark-java used in controller api
  }
  compile libraries.commonsCodec
  compile libraries.guava
  compile (libraries.helix) { // TODO: Get rid of Helix dependency in venice-common
    // Helix pulls in an ancient version of the zkclient, which lacks some APIs and clashes with Kafka's dependency
    exclude group: 'com.github.sgroschupf'
    // replacing Helix's netty 3.7 with 3.9 (netty3 below) so the router doesn't get 3.7 when it depends on common
    exclude group: 'io.netty'
  }
  compile libraries.netty3
  compile libraries.http_client
  compile libraries.kafkaClients // TODO: Get rid of Kafka dependency in venice-common
  compile libraries.zkclient // It's necessary to pull in the most recent version of zkclient explicitly, otherwise Helix won't have it...
  compile libraries.zookeeper // TODO: Get rid of ZK dependency in venice-common

  // Test dependencies are allowed to be bulkier.
  testCompile libraries.kafka
  testCompile libraries.zookeeper
  testCompile project(':venice-controller')
  testCompile project(':venice-server')
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

test {
  useTestNG()
}
